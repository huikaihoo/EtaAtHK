apply plugin: 'com.android.application'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'de.undercouch.download'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionSuffix = "-alpha.4"

def versionBuild = 11

def static getBuildTime() {
    def date = new Date()
    return date.format('yyyyMMdd')
}

kapt {
    useBuildCache = true
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "hoo.etahk"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode versionBuild
        versionName "$versionMajor.$versionMinor.$versionPatch$versionSuffix"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "zh", "zh-rHK", "en"
        vectorDrawables.useSupportLibrary = true
        archivesBaseName = "$applicationId-$versionName"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.resValue 'string', 'google_maps_key', google_maps_api_key
    }
    lintOptions {
        check 'Interoperability'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        def flavor = variant.mergedFlavor
        def versionName = flavor.getVersionName()
        if (variant.buildType.isDebuggable()) {
            versionName = "$versionMajor.$versionMinor.$versionPatch-dev." + getBuildTime()
        }
        versionName += " ($versionBuild)"
        variant.outputs.each { output ->
            output.versionNameOverride = versionName
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Android X Core + Material Design
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.appcompat:appcompat-resources:1.1.0-rc01'
    implementation 'androidx.browser:browser:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.core:core:1.1.0-rc02'
    implementation 'androidx.core:core-ktx:1.1.0-rc02'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.0-alpha02'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.1.0-rc01'
    implementation 'androidx.preference:preference-ktx:1.1.0-rc01'
    implementation 'com.google.android.material:material:1.0.0'

    // Google Service
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.0.1'
    implementation 'com.google.firebase:firebase-config:18.0.0'
    implementation 'com.google.firebase:firebase-perf:18.0.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // ViewModel + LiveData + Room + Paging
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.0.0'
    implementation 'androidx.room:room-runtime:2.1.0'
    kapt 'androidx.room:room-compiler:2.1.0'
    implementation 'androidx.paging:paging-runtime:2.1.0'

    // Kotlin library for android
    implementation 'com.mcxiaoke.koi:core:0.5.5'
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // RecyclerView FastScroll
    implementation 'com.simplecityapps:recyclerview-fastscroll:2.0.0'
    //implementation 'com.github.huikaihoo:recyclerview-fastscroll:1.0.17-fork.1'

    // JSON / HTML Parser
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.jsoup:jsoup:1.12.1'

    // Markwon
    implementation "ru.noties:markwon:$markwon_version"
    implementation "ru.noties:markwon-image-loader:$markwon_version"
    implementation "ru.noties:markwon-view:$markwon_version"

    // Retrofit2 (OkHttp3)
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    //implementation 'com.squareup.okhttp3:okhttp:3.12.1'

    // Location Picker
    //implementation ('com.schibstedspain.android:leku:6.2.1') {
    implementation ('com.github.huikaihoo:leku:6.2.1-lite') {
        exclude group: 'com.google.android.gms'
        exclude group: 'androidx.appcompat'
    }

    // Debug
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    debugImplementation 'com.facebook.flipper:flipper:0.23.4'
    debugImplementation 'com.facebook.soloader:soloader:0.6.1'
    //releaseImplementation 'com.facebook.flipper:flipper-noop:0.23.4'
    releaseImplementation ('com.github.huikaihoo:flipper-android-no-op:0.1.1') {
        exclude group: 'com.squareup.okhttp3'
    }
    //debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

    // Unit Test
    testImplementation 'androidx.arch.core:core-testing:2.1.0-rc01'
    testImplementation 'androidx.room:room-testing:2.1.0'
    testImplementation 'junit:junit:4.13-beta-3'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"
    testImplementation 'org.robolectric:robolectric:4.3'

    // Android Unit Test
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

//task downloadFiles(type: Download) {
//    src 'https://raw.githubusercontent.com/google/diff-match-patch/master/java/src/name/fraser/neil/plaintext/diff_match_patch.java'
//    dest 'src/main/java/name/fraser/neil/plaintext/diff_match_patch.java'
//}

task copyFiles(type: Copy) {
    from 'src/main/res/values-zh/'
    include 'strings.xml'
    into 'src/main/res/values-zh-rHK/'
}

preBuild.dependsOn(copyFiles)
preBuild.mustRunAfter(copyFiles)
