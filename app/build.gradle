apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def versionMajor = 0
def versionMinor = 7
def versionPatch = 6
def versionBuild = 8

def static getCurrentDate() {
    def date = new Date()
    return date.format('yyyyMMdd')
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

kapt {
    useBuildCache = true
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "hoo.etahk"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode versionBuild
        versionName "$versionMajor.$versionMinor.$versionPatch." + getCurrentDate() + " ($versionBuild)"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildTypes.each {
        it.resValue 'string', 'google_maps_key', google_maps_api_key
    }
    lintOptions {
        check 'Interoperability'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.30.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.30.0'

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"

    // Android X Core + Material Design
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'com.google.android.material:material:1.0.0'

    // Google Service
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-places:16.0.0'

    // ViewModel + LiveData + Room + Paging
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"
    implementation "androidx.room:room-runtime:2.1.0-alpha01"
    kapt "androidx.room:room-compiler:2.1.0-alpha01"
    implementation "androidx.paging:paging-runtime:2.1.0-alpha01"

    // Kotlin library for android
    implementation 'androidx.core:core-ktx:1.0.0'
    implementation 'com.mcxiaoke.koi:core:0.5.5'

    // RecyclerView-FastScroll
    implementation 'com.github.huikaihoo:recyclerview-fastscroll:1.0.17-fork.1'
    //implementation 'com.simplecityapps:recyclerview-fastscroll:1.0.18'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Retrofit2 (OkHttp3)
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //implementation 'com.squareup.okhttp3:okhttp:3.9.1'

    // Debug
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

    // Unit Test
    testImplementation 'androidx.arch.core:core-testing:2.0.0'
    testImplementation 'androidx.room:room-testing:2.1.0-alpha01'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.8'

    // Android Unit Test
    androidTestImplementation 'androidx.test:runner:1.1.0-beta02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-beta02'
}

task copyFiles(type: Copy) {
    from 'src/main/res/values-zh/'
    include 'strings.xml'
    into 'src/main/res/values-zh-rHK/'
}

preBuild.dependsOn(copyFiles)
preBuild.mustRunAfter(copyFiles)
